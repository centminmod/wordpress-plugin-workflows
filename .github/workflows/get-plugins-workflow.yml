name: 0 - Short Test Mirror WordPress Plugins

on:
  workflow_dispatch:      # Allows manual triggering of the workflow

jobs:
  mirror_plugins:
    runs-on: ubuntu-latest

    steps:
      - name: Check Disk Space Before
        run: |
          df -hT || true

      - name: Remove unused components
        uses: ngocptblaplafla/more-space-plz@v1
        with:
          aliyun: true
          android-sdk: true
          apache: true
          aws-tools: true
          azcopy: true
          azure-cli: true
          azure-devops-cli: true
          bazel: true
          bicep: true
          clang: true
          cmake: true
          codeql-bundle: true
          container-tools: true
          docker: true
          docker-data: true
          dotnet: true
          firefox: true
          gcc-compilers: true
          gfortran: true
          google-chrome: true
          google-cloud-cli: true
          golang: true
          haskell: true
          heroku: true
          homebrew: true
          java-tools: true
          julia: true
          kotlin: true
          kubernetes-tools: true
          leiningen: true
          man: true
          microsoft-edge: true
          miniconda: true
          mono: true
          mssql-tools: true
          mysql: true
          nginx: true
          nodejs: true
          nvm: true
          oc-cli: true
          oras-cli: true
          packer: true
          php: true
          postgresql: true
          powershell: true
          pulumi: true
          rlang: true
          ruby: true
          rust: true
          sbt: true
          selenium: true
          snap: true
          sqlpackage: true
          swift: true
          terraform: true
          vcpkg: true
          yq: true

      - name: Check Disk Space After
        run: |
          df -hT || true

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          pip install requests

      - name: Run query_plugins.py Script
        run: |
          python3 ./scripts/query_plugins.py -pages 1 -perpage 1 > plugin_results.json

      - name: Upload Plugin Results as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: plugin-results
          path: plugin_results.json

      - name: Set Execute Permission
        run: chmod +x ./scripts/get_plugins_r2_workflow.sh

      - name: Test List Plugins Flag (-l)
        env:
          CF_WORKER_URL: ${{ secrets.CF_WORKER_URL }}
        run: |
          ./scripts/get_plugins_r2_workflow.sh -l

      - name: Upload Plugin List
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: plugin-list
          path: wordpress-plugins/wp-plugin-svn-list.txt

      - name: Run ./scripts/get_plugins_r2_workflow.sh and Log Output
        env:
          CF_WORKER_URL: ${{ secrets.CF_WORKER_URL }}
        run: |
          time ./scripts/get_plugins_r2_workflow.sh -p 1 -d -D y -t 0.5 -c -f 2>&1 | tee script_output.log

      - name: Check Locally Downloaded WP Plugins
        run: |
          ls -lAhrt mirror || true

      - name: Upload Script Output Log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: script-output-log
          path: script_output.log

      - name: Prepare Plugin Logs for Upload
        run: |
          find plugin-logs -type f | while read file; do
            newname=$(echo "$file" | sed -e 's/[:"<>|*?]/_/g' -e 's/\$/_/g' -e 's/\r/_/g' -e 's/\n/_/g')
            if [ "$file" != "$newname" ]; then
              mv "$file" "$newname"
              echo "Renamed $file to $newname"
            fi
          done

      - name: Upload Plugin Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: plugin-logs
          path: plugin-logs/

      - name: Purge Cloudflare cache for WP INFO API hostname
        env:
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
          CLOUDFLARE_HOSTNAME_INFO: ${{ secrets.CLOUDFLARE_HOSTNAME_INFO }}
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ env.CLOUDFLARE_ZONE_ID }}/purge_cache" \
          -H "X-Auth-Key: Bearer ${{ env.CLOUDFLARE_API_TOKEN }}" \
          -H "Content-Type: application/json" \
          --data '{"hosts":["${{ env.CLOUDFLARE_HOSTNAME_INFO }}"]}'

      - name: Purge Cloudflare cache for WP ZIP API hostname
        env:
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
          CLOUDFLARE_HOSTNAME_ZIP: ${{ secrets.CLOUDFLARE_HOSTNAME_ZIP }}
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ env.CLOUDFLARE_ZONE_ID }}/purge_cache" \
          -H "X-Auth-Key: Bearer ${{ env.CLOUDFLARE_API_TOKEN }}" \
          -H "Content-Type: application/json" \
          --data '{"hosts":["${{ env.CLOUDFLARE_HOSTNAME_ZIP }}"]}'